Check Ansible Installation:
*****************************
$ ansible --version

Establish SSH connection controller machine and host machine:
*************************
Establish SSH key pair in linux system to have SSH connectivity with localhost using the following commands:

$ ssh-keygen -t rsa (Press Enter when asked for File and Paraphrase details)

$ cd

$ cat .ssh/id_rsa.pub >> .ssh/authorized_keys

[OR] when connecting with public server host

$ ssh-copy-id -i username@ipHost

Add the host ‘localhost’  in ansible host file:

$ vim /etc/ansible/hosts


[webserver]
localhost:42006



Ad Hoc Commands in Ansible


$ ansible webserver -m ping
$ ansible webserver -m command -a "df -h"
$ ansible webserver -m command -a “uptime”


Playbooks:
==========================================

# cd /etc/ansible

# vim playbook1.yml

- name: debug and register module
  hosts: webserver
  tasks:
  - name: Print a message
    debug: msg="Ansible Playbook Execution"
  - name: Execute a command on the host server
    command: hostname -s
    register: hostname_output  # here we are creating a variable
  - name: Show the output
    debug: var=hostname_output.stdout

Save the file (:wq!)

Execute the playbook: 
# ansible-playbook playbook1.yml --syntax-check
# ansible-playbook playbook1.yml 


=======================================

Variables:

# vim playbook2.yml

---
- name: Custom variables 
  hosts: webserver
  become: true  # become a root user in order to execute the tasks
  become_user: root
  # customize the playbook to run with different packages as required
  vars:  # we write map, its not a list
   pkg_name: php
   pkg_state: present
   file_path: /tmp/demo1.txt
   file_state: touch
  tasks:
  - name: Install {{pkg_name}}  on hostserver
    package: name={{pkg_name}} state={{pkg_state}}
  - name: create a file on hostserver
    file: path={{file_path}}  state={{file_state}}

Save the playbook.

# ansible-playbook playbook2.yml
=============================================

Before we begin next playbook, lets look at Setup module and Fact variable:
===========================================

# ansible webserver -m setup
It gives lot of information

# ansible webserver -m setup | wc -l

It will return total number of lines
# ansible webserver -m setup -a "filter=ansible_memfree_mb"

It will return value for given ansible variable.
# ansible webserver -m setup -a "filter=ansible_mem*"


# vim playbookfact.yml
- hosts: webserver
  tasks:
  - name: Show Ipaddress of the host servers
    debug:
      msg="The ipaddress of host server  is {{ ansible_default_ipv4.address }}"
  - name: print variable
    debug: 
     var=ansible_default_ipv4.address













